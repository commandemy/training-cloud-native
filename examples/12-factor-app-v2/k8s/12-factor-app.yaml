apiVersion: v1
kind: Namespace
metadata:
  name: 12-factor-app
---  
apiVersion: v1
kind: ConfigMap
metadata:
  name: common-env
  namespace: 12-factor-app
data:
  NAMESPACE: ""
  LOGLEVEL: info
  SERVICEDIR: services
  TRANSPORTER: redis://redis:6379
  MONGO_URI: mongodb://mongo/12-factor-app
---
apiVersion: v1
kind: Service
metadata:
  name: api
  namespace: 12-factor-app
  labels:
    app: api
spec:
  selector:
    app: api
  ports:
  - name: web
    port: 3000 
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
  namespace: 12-factor-app
spec:
  selector:
    matchLabels:
      app: api
  replicas: 1
  template:
    metadata:
      labels:
        app: api
    spec:
      containers:
      - name: api
        image: commandemy/12-factor-app:v0.1
        envFrom:
        - configMapRef:
            name: common-env
        env:
          - name: SERVICES
            value: api

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: products
  namespace: 12-factor-app
spec:
  selector:
    matchLabels:
      app: products
  replicas: 1
  template:
    metadata:
      labels:
        app: products
    spec:
      containers:
      - name: products
        image: commandemy/12-factor-app:v0.1
        envFrom:
        - configMapRef:
            name: common-env
        env:
          - name: SERVICES
            value: products

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongo
  namespace: 12-factor-app
  labels:
    app: mongo
spec:
  selector:
    matchLabels:
      app: mongo
  replicas: 1
  serviceName: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
        - image: mongo
          name: mongo
          ports:
            - containerPort: 27017
          resources: {}
          volumeMounts:
            - mountPath: /data/db
              name: mongo-data
      volumes:
        - name: mongo-data
          persistentVolumeClaim:
            claimName: mongo-data

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongo-data
  namespace: 12-factor-app
  labels:
    name: mongo-data
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi

---
apiVersion: v1
kind: Service
metadata:
  name: mongo
  namespace: 12-factor-app
  labels:
    app: mongo
spec:
  ports:
    - port: 27017
      targetPort: 27017
  selector:
    app: mongo
---
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: 12-factor-app
spec:
  selector:
    app: redis
  ports:
  - port: 6379
    name: redis
    targetPort: 6379
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: 12-factor-app
spec:
  selector:
    matchLabels:
      app: redis
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redis
        ports:
        - containerPort: 6379
          name: redis
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - "redis-cli -h $(hostname) ping"
          initialDelaySeconds: 15
          timeoutSeconds: 5
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - "redis-cli -h $(hostname) ping"
          initialDelaySeconds: 20
          periodSeconds: 3  
